클래스(1반, 2반 -> 반) -> 공통 요소를 묶어라 (멤버 = 필드) 

->> 왜 사용하냐? 딱한번만 선언하고 싶어서 사용함.  // 변수 -> 객체

	- 공통요소를 한번만 선언해 놓고 가져다가 사용만 하도록 설계한다.(클레스는 타입이다)

	1. 타입이다.
		클레스 안에 선언된 변수와 메소드를 사용하고 싶다면,
		해당 클래스 타입으로 변수를 선언해야 한다.

	2. 주어이다.
		원숭이가  먹는다 바나나를.
		Mokey.eat("바나나");

클래스 선언
	class 클래스명 {

		필드(변수, 메소드);

	}
					ex )클래스명 객체명 = new 클래스명() ; 힙메모리에 할당한후 그메모리의 첫번째 주소값 
클래스의 필드 사용
	1. 객체화(instance.예를들다) : 객체를 만드는 작업, 추상적인 개념을 구체화시키는 작업. / 객체(instance variable)
		클래스명 객체명 = new 클래스명();  -> 객체화(추상적인것을 구체화 시킨것), 자바는 객체 지향적
				클래스명() -> 생성자
		객체명.필드명
		※ . (마침표) : 하위 연산자, 멤버변수 접근 연산자, 닷 연산자, 점 연산자
			주소값 뒤에서만 사용이 가능하며 해당 주소를 참조하는 명령어이다.

	2. 

생성자(클래스명( )) -> 리턴이없다 (주소를 리턴하기 때문에)
	클래스 이름 뒤에 소괄호가 있는 형태, 메소드와 기능이 똑같지만 메소드라고 부르지 않는다.
	생성자는 리턴이라는 기능이 존재하지 않기 때문이다.

	1. 해당 클래스의 필드를 메모리에 할당한 후 부여된 주소값을 가져온다.
	2. 초기화


기본 생성자
	매개변수가 없는 생성자이며, 클래스 선언 시 자동으로 선언된다.
	사용자가 직접 생성자를 선언하게 되면 기본 생성자는 없어진다.

this
	필드에 접근한 객체가 누구인지 알아야 해당 필드에 접근할 수 있다.
	이 때 접근한 객체가 가지고 있는 필드의 주소값을 this라는 변수에 자동으로 담긴다.

--------------------------------------------------------------------------------------------------------------------------------------

Storage class(저장 기억 부류)


		Stack				Data영역
		지역변수, 매개변수(메소드 변수)	전역변수, 정적변수(static)
1. 초기화		직접				자동
2. 생명주기	}(영역이 닫히면)			new(전역변수), 프로그램 종료 시(정적변수)		

static
	모든 객체가 공유해야 할 때 사용한다.

--------------------------------------------------------------------------------------------------------------------------------------

다형성(polymorphism) -메타몽 // 메소드에 적용되는 성질
	1. 오버로딩(OverLoading)
		매개 변수의 개수 또는 타입이 다르면 동일한 이름의 메소드로 선언할 수 있다.
	2. 


--------------------------------------------------------------------------------------------------------------------------------------

확률

package classTest;

import java.util.Random;

public class RandomTest {
   public static void main(String[] args) {
      Random random = new Random();
//      for (int i = 0; i < 10; i++) {
//         System.out.println(random.nextInt(6));
//      }
      
      int[] rating = new int[10];
      int data = 30;
      
      for (int i = 0; i < data / 10; i++) {
         rating[i] = 1;
      }
      
      if(rating[random.nextInt(10)] == 1) {
         System.out.println("당첨");
      }else {
         System.out.println("꽝");
      }
   }
}





--------------------------------------------------------------------------------------------------------------------------------------

클래스 심화 실습
	
	- 주제 : 원하는 직업을 클래스로 선언
	- 반드시 수익 창출이 되어야 한다.
	- 확률을 추가한다.
	- 구현에 필요한 필드는 얼마든지 추가 선언이 가능하다.
			ex) 승진, 티어 승급, 연속 5회 성공 시 레벨 업 등

	- 콘테(토트넘 감독) - Antonio Conte
	- 잉글랜드 프리미어 리그 우승, 유니폼 판매, 티켓 수익
	- 20개 구단중 4위안에 들어야 챔피언스리그 참가 가능. , 경기 중 손흥민이 골 넣을 확률 10분의 1
	- 필드
	1. 선수
	2. 골수
	3. 승수
	4. 패배 수
	5. 순위
	6. 유니폼 판매 수익
	7. 티켓 판매 수익
	8. 
	













	

