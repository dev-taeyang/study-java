*JAVA - 프로그래밍 언어 (사람의 언어, 0과1로 변환해주는 언어)
	프로그래밍 언어는 개발자와 컴퓨터가 소통하기 위한 언어이다.

*소스 코드 - 명령어를 작성해 놓은 것.
	 개발자와 컴퓨터가 소통할 것을 글로 작성해 높은 것.

*소스파일 - 소스코드가 작성되어 있는 파일.

*컴파일 - 사람의 언어를 컴퓨터 언어로 바꿔주는 작업.(JAVA -> 0,1)

*컴파일러 - 컴파일을 해주는 프로그램 또는 명령어.

	컴파일러 해석 방향 : 위에서 아래로, 좌에서 우로 번역.

*콘솔 - 개발자와 운영체제가 소통한 결과를 보여주는 창.
 

*프로그램 - 소스 코드로 잘 짜여진 틀.(문법, 오류없이 잘 돌아가는)
	
> 일반 프로그램
	프로그램
	OS(Operating System 운영체제) - 하드웨어에 전기신호를 적절하게 흘려주는 역할
	하드웨어

	- 프로그램 실행 -> OS에 명령어 전달 -> 하드웨어 실행
	- 일반프로그램은 운영체제가 다르면 소통이 잘되지않음(이식성이 좋지않음)
	- 

> JAVA 프로그램

	1. 프로그램
	2. JVM : JAVA 프로그램을 OS에 맞게 번역한다.
	3. OS
	4. 하드웨어

	- JAVA 프로그램은 이식성이 좋다.
	- JVM이 없으면 돌아가지 않음, 항상 메모리를 차지함(단점)

-----------------------------------------------------------------------------------------

JVM(JAVA Virtual Machine) : JAVA 프로그램을 실행해 줌.(자바 가상 운영체제)

JRE(JAVA Runtime Environment) : JVM을 생성하며, 실행할 때 필요한 라이브러리(소스코드가 압축되어있는 공간) 파일들을 가지고 있다.

JDK(JAVA Development Kit) : JDK만 설치하면 됨, JRE외에 (개발자들이 만들어놓은) 개발에 필요한 도구들을 가지고 있다.
			 컴파일 명령어와 실행 명령어를 담고 있다.

----------------------------------------------------------------------------------------------------

JDK 설치 - 11버전
	설치가 이미 되어 있는지 확인
	c: \Java]jdk-11.0.15로 설치
	환경변수 설정 후
	cmd에서 java, javac 명령어 확인
	프로그램 제거 -> Java 11버전 -> cmd에서 버전확인 (javac -version)

https://drive.google.com/file/d/1uXJrIxuM95KTSjF-fxGos7pHsbknkVIZ/view?usp=share_link

IDE(통합 개발 환경)
	- eclipse
	- intellij

> 이클립스 설치
- 기본 환경이 JSP환경이라 JAVA로 변경해줘야함.
https://drive.google.com/file/d/1ZIVbjwsAvTyUw9ivb2SE3MVpAYiysgcf/view?usp=share_link


=================================================================

* JAVA 기본 구조

	1. 프로젝트
		2. 패키지
			3. 클래스(첫글자 대문자)
				4. 메소드(이름뒤에 소괄호)
					5. 소스코드




A+S+N(프로텍트 생성), 이후 C+N

*출력 메소드
	print() : 마지막에 자동으로 줄바꿈이 되지 않고 아래의 문장과 이어서 출력된다.
	println() : 마지막에 줄바꿈이 된다.
	printf()

출력 메소드 목적 : 전달받은 데이터 및 전달할 데이터 검사, 오류 발생 지점 구체화 및 검사.

========================================================

변수 : 저장공간(알맞는 공간에 알맞는 값을 담아라)

	x	=(대입연산자)	10
         저장공간의           대입                        값
	이름	 연산자


자료형(Type, 종류)

	자료형	Type	byte	값	

	정수형	byte	1
		short	2
->기본형		int	4	10, 32, 543, -32, 2147483647, ....
		long	8

	실수형	float	4	10.5F, -0.9F, 0.0F, 123.4563F, ...F
->기본형		double	8	10.5, -0.9, 0.0, 123.4563, ...

	문자형	char	2	'강', '일', '1', '0', '-', ...

->최근사용	문자열	string	?	"0", "0.0", "1", "A", "ABC", "안녕~~", "..."


bit byte k m g t p(페타) -> 단위

변수의 선언
	type name = value;

	예)
	int x = 10; -> x라는 이름의 저장공간이 할당(allocation)되고 그 안에 10이 들어간다.

	
RAM(메모리)
====================
OS Kernel Space 	- 드라이버(연결 통로) ex)마우스 드라이버 설치
====================
Stack		- 지역변수, 매개 변수
----------------------------------
Free
----------------------------------
Heap		- 동적 메모리
====================
BSS		- 초기화 되지 않은 전역 변수
====================
Data 영역		- 전역변수, 정적 변수
====================
Text 영역		- 상수, 코드
====================

		int x = 10;
		x라는 이름의 저장공간이 RAM에 할당 되고 10이라는 값이 들어간다.

주소(자바에서는 해시코드)
	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당되면 고유한 값인 주소값이 부여된다.
	계속 실행되거나 종료되는 프로그램이 있기 때문에, 주소값을 변경될 수 있으나 중복은 없다.

변수의 사용 (자료형이나 대입연산자가 하나라도 있으면 선언, 아닐 시 사용)
	int data = 20;  // 선언
	date= 30;  //선언
	System.out.print(data +9); //사용
	data = data + 7; // 선언, 사용
	data - 9; // 사용

--------------------------------------------------------------------------------------------

조교 시스템 - 1:1 보충지도
담당 멘토선생님께 요청하여 보충 신청(일정 잡은 후 보충)






















